---
apiVersion: v1
kind: Service
metadata:
  name: rapids-service
  labels:
    app: rapids-service
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 3000
    targetPort: 3000
  - name: grpc
    port: 50051
    targetPort: 50051
  - name: jupyter
    port: 8888
    targetPort: 8888
  - name: mlflow
    port: 5000
    targetPort: 8787
  - name: dask
    port: 8787
    targetPort: 8787
  - name: nvidia
    port: 8786
    targetPort: 8786
  - name: mlflow
    port: 5000
    targetPort: 5000
  selector:
    app: rapids-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rapids-service
  labels:
    app: rapids-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rapids-service
  template:
    metadata:
      labels:
        app: rapids-service
    spec:
      affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: NotIn
                    values:
                      - kmaster
      imagePullSecrets:
        - name: regcred
      containers:
        - name: rapids-service
          image: alvarogg777/rapidsai:21.06-cuda11.2-runtime-ubuntu20.04-py3.8
          imagePullPolicy: IfNotPresent
          tty: true
          ports:
          - containerPort: 50051
          - containerPort: 3000
          - containerPort: 8888
          - containerPort: 8787
          - containerPort: 8786
          - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 5
          env:
          - name: TZ
            value: Europe/Madrid
          #- name: MLFLOW_S3_IGNORE_TLS
          #  value: "true"
          - name: MLFLOW_S3_ENDPOINT_URL
            valueFrom:
                secretKeyRef:
                  key: S3_ENDPOINT_URL
                  name: storage-secrets
          - name: PGPASSWORD
            valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: storage-secrets
          - name: PGUSER
            valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: storage-secrets
          - name: PGHOST
            valueFrom:
                secretKeyRef:
                  key: POSTGRES_HOST
                  name: storage-secrets
          - name: PGDATABASE
            value: mlflow
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
                secretKeyRef:
                  key: MINIO_ACCESS_KEY
                  name: storage-secrets
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
                secretKeyRef:
                  key: MINIO_SECRET_KEY
                  name: storage-secrets

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: jupyter-ingress
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`jupyter.k3d.io`)
      kind: Rule
      services:
        - name: rapids-service
          port: 8888
  tls:
    certResolver: default
    options: {}


